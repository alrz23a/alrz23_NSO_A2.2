---
- name: Configure webservers
  hosts: webservers
  become: true
  become_method: sudo
  gather_facts: true

  tasks:
    - name: Update apt cache
      apt:
        update_cache: true
   
    - name: Install pip3
      apt:
       name: python3-pip
       state: latest

    - name: Install Flask using pip3
      pip:
        executable: pip3
        name: flask
        state: latest

    - name: Install Gunicorn, SNMP, snmp-mibs-downloader, and snmpd
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - gunicorn
        - snmp
        - snmp-mibs-downloader
        - snmpd

    - name: Deploy snmpd configuration
      template:
         src: "{{ playbook_dir }}/snmpd.conf"
         dest: /etc/snmp/snmpd.conf
    
    - name: Ensure snmpd is running and enabled
      service:
         name: snmpd
         state: restarted
         enabled: yes

    - name: Deploy application
      copy:
        src: "{{ playbook_dir }}/application2.py"
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0644'
    
    - name: Run Flask application
      shell: gunicorn -w 2 -D -b 0.0.0.0:8080 application2:app

- name: Configure HAproxy and Nginx
  hosts: HAproxy
  become: true
  gather_facts: true
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
    
    - name: Install HAproxy, Nginx, and SNMP
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - haproxy
        - nginx
        - snmp

    - name: Deploy HAproxy configuration
      template:
        src: "{{ playbook_dir }}/haproxy.cfg.j2"
        dest: /etc/haproxy/haproxy.cfg
    
    - name: Ensure HAproxy is running
      service:
        name: haproxy
        state: restarted

    - name: Deploy Nginx configuration
      template:
        src: "{{ playbook_dir }}/udp_loadbalancer.conf.j2"
        dest: /etc/nginx/nginx.conf

    - name: Ensure Nginx is running
      service:
        name: nginx
        state: restarted

    - name: Perform SNMP requests
      shell:  "snmpwalk -t 1 -r 1 -v2c -c public localhost:1611 iso.3.6.1.2.1.1.1.0"
      register: output
      loop: [1, 2, 3]
      loop_control:
        label: "SNMP request {{ loop.index }}"
    - debug: var=output.stdout_lines
...
